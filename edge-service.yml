server:
  port: 9000
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 15s

spring:
  cloud:
    gateway:
      default-filters:
        - SaveSession
        - name: RequestRateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 10
              burstCapacity: 20
              requestedTokens: 1
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
            exception: java.io.IOException, java.util.concurrent.TimeoutException
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
              factor: 2
              basedOnPreviousValue: false
      httpclient:
        connect-timeout: 2000
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s
      routes:
        - id: catalog-route
          uri: ${CATALOG_SERVICE_URL:http://catalog-service}/books
          predicates:
            - Path=/books/**
          filters:
            - name: CircuitBreaker
              args:
                name: catalogCircuitBreaker
                fallbackUri: forward:/catalog-fallback
        - id: order-route
          uri: ${ORDER_SERVICE_URL:http://order-service}/orders
          predicates:
            - Path=/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
  data:
    redis:
      connect-timeout: 2s
      host: edge-redis
      port: 6379
      password: 'password'
      timeout: 1s
  session:
    store-type: redis
    timeout: 10m
    redis:
      namespace: edge:redis
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-name: "Polar Store"
            client-id: "edge-service"
            client-secret: "polar-keycloak-secret"
            authorization-grant-type: authorization_code
            scope: openid
        provider:
          keycloak:
            issuer-uri: http://polar-keycloak:8080/realms/PolarBookshop # TODO: remove port when running in kubernetes

resilience4j:
  circuitbreaker:
    config:
      default:
        slidingWindowSize: 20
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 15000
  timelimiter:
    config:
      default:
        timeoutDuration: 5s

logging:
  level:
    io.github.resilience4j: DEBUG

management:
  endpoints.web.exposure.include: refresh